{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "SoldNFT",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "oldPrice",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "UpdatedPrice",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "NFTContractAddresses",
				"outputs": [
					{
						"internalType": "contract NFTContract",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "NFTPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "minedNFTS",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "bytes16",
						"name": "dna",
						"type": "bytes16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "mintNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "bytes16",
						"name": "_dna",
						"type": "bytes16"
					}
				],
				"name": "purchaseNFT",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_period",
						"type": "uint256"
					}
				],
				"name": "setCooldown",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "updatePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Main.sol": "MainContract"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"Main.sol": {
			"keccak256": "0x0175367f6d16e7881df253dc0ac0e1fd37a1a8b4c90ff6aae392b41d4562967c",
			"license": "MIT",
			"urls": [
				"bzz-raw://88ab5d02e35d00b3461ecb4a3eca69f83ad1661887760aadea1838957c169c4a",
				"dweb:/ipfs/Qmcu6eFVVKbtYhGPm3nDhdBA58fxyrsZeGE1p1zthM4TUv"
			]
		},
		"contracts/NFT.sol": {
			"keccak256": "0x2bea183ce5a98fe8634f372574ad8f1cdb3a3120ebfa59c32d5cd2668266a17d",
			"license": "MIT",
			"urls": [
				"bzz-raw://5865da30d33d7f9a2bfd69b226d26a2224a4b7c2759cf30e3f4b9e24294a78c8",
				"dweb:/ipfs/QmWVrotuBJrN4PDm2iu5VprdJr9NH7vcS13EtaP7ks1tm1"
			]
		},
		"interfaces/IMain.sol": {
			"keccak256": "0x7dc405775f1d46db9388226fa9856b935aac151f1ab93f0428413635f718f4c0",
			"license": "MIT",
			"urls": [
				"bzz-raw://29312776fc6e86e92719dce1b6e8a6c0c758e18f9bced1ac1790bdb9f2a434d6",
				"dweb:/ipfs/QmPmbCUMYpQf2pwfnmARbqLP3hgCCTCtSXs869u7ZA8P6Y"
			]
		},
		"interfaces/INFT.sol": {
			"keccak256": "0x52543ccc964bbae612f1b89401c1e14ae6fd8dcae8ac59ee4cfb6301e4c0a3ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://8966bc9fef94193ae1f0ad0a97feb5f6facd451073e04f5bdd0eef1375d8f7a5",
				"dweb:/ipfs/Qmcb3G6osx5CVPj41j5M8Zs4d1QjwvttTiBS3tMh8BJ7AF"
			]
		},
		"structs.sol": {
			"keccak256": "0x95ae269fc4c6ec2d99e93c4bccf474f8b6f6862f1db9520b9f0291b8745fcf9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://80d1e9b611b4b3d58c3d44f3ad39574b1db2a5c0776362abf2cfb8b155fbb597",
				"dweb:/ipfs/QmS1pMu8ATWmu4FgPZPnaQcJvgy4CxGtUDce2fVTX1LaDp"
			]
		}
	},
	"version": 1
}