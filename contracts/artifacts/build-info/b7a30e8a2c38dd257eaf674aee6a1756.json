{
	"id": "b7a30e8a2c38dd257eaf674aee6a1756",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Counter.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\n// IMPORTING NECESSARY FILES\r\n    // IMPORTING CONTRACTS\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n    // IMPORTING INTERFACES\r\nimport \"interfaces/ICounter.sol\";\r\n\r\ncontract CounterContract is Ownable(msg.sender), ICounter{\r\n    // DECLARING VARIABLES\r\n    uint public count = 0;\r\n    bool public counterActivated = true;\r\n    uint public transactionCost = 0.01 ether;\r\n\r\n    // A CONSTRUCTOR THAT DEPOSITS MONEY TO THE CONTRACT\r\n    constructor() payable {\r\n        require(msg.value >= 0.02 ether, \"Minimum value to deposit to the contract is 0.02 ether\");\r\n    }\r\n\r\n    // A MODIFIER TO CHECK IF COUNT CAN BE UPDATED\r\n    modifier onlyCounterActivated{\r\n        require(counterActivated == true, \"Counter can be updated only when activated\");\r\n        _;\r\n    }\r\n\r\n    // A FUNCTION TO SET THE TRANSACTION COST\r\n    function setTransactionCost(uint _value) external onlyOwner{\r\n        transactionCost = _value;\r\n    }\r\n\r\n    // A FUNCTION TO UPDATE THE COUNTER ACTIVATED\r\n    function setCounterActivated(bool _counterActivated) external onlyOwner{\r\n        counterActivated = _counterActivated;\r\n    }\r\n\r\n    // A FUNCTION TO INCREASE OR DECREASE COUNT\r\n    function increaseCount() external payable onlyCounterActivated{\r\n        require(msg.value == transactionCost);\r\n        count++;\r\n    }\r\n\r\n    function decreaseCount() external payable onlyCounterActivated{\r\n        require(msg.value == transactionCost);\r\n        count--;\r\n    }\r\n\r\n    // FUNCTION TO WITHDRAW FUNDS FROM THE CONTRACT\r\n    function withdrawFunds() external onlyOwner{\r\n        address payable currentOwner = payable (owner());\r\n        uint contractBalance = address(this).balance;\r\n        currentOwner.transfer(contractBalance);\r\n    }\r\n}"
			},
			"interfaces/ICounter.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\ninterface ICounter{\r\n    function setTransactionCost(uint _value) external ;\r\n    function setCounterActivated(bool _counterActivated) external;\r\n    function increaseCount() external payable ;\r\n    function decreaseCount() external payable ;\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Counter.sol": {
				"CounterContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "counterActivated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decreaseCount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increaseCount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_counterActivated",
									"type": "bool"
								}
							],
							"name": "setCounterActivated",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setTransactionCost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transactionCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Counter.sol\":239:1795  contract CounterContract is Ownable(msg.sender), ICounter{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Counter.sol\":351:352  0 */\n  0x00\n    /* \"contracts/Counter.sol\":331:352  uint public count = 0 */\n  0x01\n  sstore\n    /* \"contracts/Counter.sol\":390:394  true */\n  0x01\n    /* \"contracts/Counter.sol\":359:394  bool public counterActivated = true */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Counter.sol\":431:441  0.01 ether */\n  0x2386f26fc10000\n    /* \"contracts/Counter.sol\":401:441  uint public transactionCost = 0.01 ether */\n  0x03\n  sstore\n    /* \"contracts/Counter.sol\":275:285  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Counter.sol\":562:572  0.02 ether */\n  0x470de4df820000\n    /* \"contracts/Counter.sol\":549:558  msg.value */\n  callvalue\n    /* \"contracts/Counter.sol\":549:572  msg.value >= 0.02 ether */\n  lt\n  iszero\n    /* \"contracts/Counter.sol\":541:631  require(msg.value >= 0.02 ether, \"Minimum value to deposit to the contract is 0.02 ether\") */\n  tag_10\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_10:\n    /* \"contracts/Counter.sol\":239:1795  contract CounterContract is Ownable(msg.sender), ICounter{... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_24\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_26\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_6:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_28\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:762   */\ntag_18:\n    /* \"#utility.yul\":677:688   */\n  0x00\n    /* \"#utility.yul\":711:717   */\n  dup3\n    /* \"#utility.yul\":706:709   */\n  dup3\n    /* \"#utility.yul\":699:718   */\n  mstore\n    /* \"#utility.yul\":751:755   */\n  0x20\n    /* \"#utility.yul\":746:749   */\n  dup3\n    /* \"#utility.yul\":742:756   */\n  add\n    /* \"#utility.yul\":727:756   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:762   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:1009   */\ntag_19:\n    /* \"#utility.yul\":908:942   */\n  0x4d696e696d756d2076616c756520746f206465706f73697420746f2074686520\n    /* \"#utility.yul\":904:905   */\n  0x00\n    /* \"#utility.yul\":896:902   */\n  dup3\n    /* \"#utility.yul\":892:906   */\n  add\n    /* \"#utility.yul\":885:943   */\n  mstore\n    /* \"#utility.yul\":977:1001   */\n  0x636f6e747261637420697320302e303220657468657200000000000000000000\n    /* \"#utility.yul\":972:974   */\n  0x20\n    /* \"#utility.yul\":964:970   */\n  dup3\n    /* \"#utility.yul\":960:975   */\n  add\n    /* \"#utility.yul\":953:1002   */\n  mstore\n    /* \"#utility.yul\":768:1009   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1015:1381   */\ntag_20:\n    /* \"#utility.yul\":1157:1160   */\n  0x00\n    /* \"#utility.yul\":1178:1245   */\n  tag_32\n    /* \"#utility.yul\":1242:1244   */\n  0x36\n    /* \"#utility.yul\":1237:1240   */\n  dup4\n    /* \"#utility.yul\":1178:1245   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1171:1245   */\n  swap2\n  pop\n    /* \"#utility.yul\":1254:1347   */\n  tag_33\n    /* \"#utility.yul\":1343:1346   */\n  dup3\n    /* \"#utility.yul\":1254:1347   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1372:1374   */\n  0x40\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1363:1375   */\n  add\n    /* \"#utility.yul\":1356:1375   */\n  swap1\n  pop\n    /* \"#utility.yul\":1015:1381   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1387:1806   */\ntag_12:\n    /* \"#utility.yul\":1553:1557   */\n  0x00\n    /* \"#utility.yul\":1591:1593   */\n  0x20\n    /* \"#utility.yul\":1580:1589   */\n  dup3\n    /* \"#utility.yul\":1576:1594   */\n  add\n    /* \"#utility.yul\":1568:1594   */\n  swap1\n  pop\n    /* \"#utility.yul\":1640:1649   */\n  dup2\n    /* \"#utility.yul\":1634:1638   */\n  dup2\n    /* \"#utility.yul\":1630:1650   */\n  sub\n    /* \"#utility.yul\":1626:1627   */\n  0x00\n    /* \"#utility.yul\":1615:1624   */\n  dup4\n    /* \"#utility.yul\":1611:1628   */\n  add\n    /* \"#utility.yul\":1604:1651   */\n  mstore\n    /* \"#utility.yul\":1668:1799   */\n  tag_35\n    /* \"#utility.yul\":1794:1798   */\n  dup2\n    /* \"#utility.yul\":1668:1799   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1660:1799   */\n  swap1\n  pop\n    /* \"#utility.yul\":1387:1806   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Counter.sol\":239:1795  contract CounterContract is Ownable(msg.sender), ICounter{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Counter.sol\":239:1795  contract CounterContract is Ownable(msg.sender), ICounter{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xabd1b73d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe834cbb3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xffc959f7\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x06661abd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1236b529\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2048ff11\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x68fcb1c1\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Counter.sol\":331:352  uint public count = 0 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":893:995  function setTransactionCost(uint _value) external onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Counter.sol\":401:441  uint public transactionCost = 0.01 ether */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":1578:1792  function withdrawFunds() external onlyOwner{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Counter.sol\":1054:1180  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":1237:1373  function increaseCount() external payable onlyCounterActivated{... */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Counter.sol\":1381:1517  function decreaseCount() external payable onlyCounterActivated{... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/Counter.sol\":359:394  bool public counterActivated = true */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Counter.sol\":331:352  uint public count = 0 */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Counter.sol\":893:995  function setTransactionCost(uint _value) external onlyOwner{... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/Counter.sol\":981:987  _value */\n      dup1\n        /* \"contracts/Counter.sol\":963:978  transactionCost */\n      0x03\n        /* \"contracts/Counter.sol\":963:987  transactionCost = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":893:995  function setTransactionCost(uint _value) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Counter.sol\":401:441  uint public transactionCost = 0.01 ether */\n    tag_26:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Counter.sol\":1578:1792  function withdrawFunds() external onlyOwner{... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_63:\n        /* \"contracts/Counter.sol\":1632:1660  address payable currentOwner */\n      0x00\n        /* \"contracts/Counter.sol\":1672:1679  owner() */\n      tag_65\n        /* \"contracts/Counter.sol\":1672:1677  owner */\n      tag_41\n        /* \"contracts/Counter.sol\":1672:1679  owner() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Counter.sol\":1632:1680  address payable currentOwner = payable (owner()) */\n      swap1\n      pop\n        /* \"contracts/Counter.sol\":1691:1711  uint contractBalance */\n      0x00\n        /* \"contracts/Counter.sol\":1714:1735  address(this).balance */\n      selfbalance\n        /* \"contracts/Counter.sol\":1691:1735  uint contractBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Counter.sol\":1746:1758  currentOwner */\n      dup2\n        /* \"contracts/Counter.sol\":1746:1767  currentOwner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Counter.sol\":1746:1784  currentOwner.transfer(contractBalance) */\n      0x08fc\n        /* \"contracts/Counter.sol\":1768:1783  contractBalance */\n      dup3\n        /* \"contracts/Counter.sol\":1746:1784  currentOwner.transfer(contractBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n        /* \"contracts/Counter.sol\":1621:1792  {... */\n      pop\n      pop\n        /* \"contracts/Counter.sol\":1578:1792  function withdrawFunds() external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/Counter.sol\":1054:1180  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Counter.sol\":1155:1172  _counterActivated */\n      dup1\n        /* \"contracts/Counter.sol\":1136:1152  counterActivated */\n      0x02\n      0x00\n        /* \"contracts/Counter.sol\":1136:1172  counterActivated = _counterActivated */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":1054:1180  function setCounterActivated(bool _counterActivated) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Counter.sol\":1237:1373  function increaseCount() external payable onlyCounterActivated{... */\n    tag_45:\n        /* \"contracts/Counter.sol\":767:771  true */\n      0x01\n        /* \"contracts/Counter.sol\":747:771  counterActivated == true */\n      iszero\n      iszero\n        /* \"contracts/Counter.sol\":747:763  counterActivated */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":747:771  counterActivated == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Counter.sol\":739:818  require(counterActivated == true, \"Counter can be updated only when activated\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Counter.sol\":1331:1346  transactionCost */\n      sload(0x03)\n        /* \"contracts/Counter.sol\":1318:1327  msg.value */\n      callvalue\n        /* \"contracts/Counter.sol\":1318:1346  msg.value == transactionCost */\n      eq\n        /* \"contracts/Counter.sol\":1310:1347  require(msg.value == transactionCost) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"contracts/Counter.sol\":1358:1363  count */\n      0x01\n      0x00\n        /* \"contracts/Counter.sol\":1358:1365  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":1237:1373  function increaseCount() external payable onlyCounterActivated{... */\n      jump\t// out\n        /* \"contracts/Counter.sol\":1381:1517  function decreaseCount() external payable onlyCounterActivated{... */\n    tag_47:\n        /* \"contracts/Counter.sol\":767:771  true */\n      0x01\n        /* \"contracts/Counter.sol\":747:771  counterActivated == true */\n      iszero\n      iszero\n        /* \"contracts/Counter.sol\":747:763  counterActivated */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Counter.sol\":747:771  counterActivated == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Counter.sol\":739:818  require(counterActivated == true, \"Counter can be updated only when activated\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_80\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/Counter.sol\":1475:1490  transactionCost */\n      sload(0x03)\n        /* \"contracts/Counter.sol\":1462:1471  msg.value */\n      callvalue\n        /* \"contracts/Counter.sol\":1462:1490  msg.value == transactionCost */\n      eq\n        /* \"contracts/Counter.sol\":1454:1491  require(msg.value == transactionCost) */\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n        /* \"contracts/Counter.sol\":1502:1507  count */\n      0x01\n      0x00\n        /* \"contracts/Counter.sol\":1502:1509  count-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Counter.sol\":1381:1517  function decreaseCount() external payable onlyCounterActivated{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Counter.sol\":359:394  bool public counterActivated = true */\n    tag_55:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_107:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_108:\n        /* \"#utility.yul\":177:201   */\n      tag_130\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_107\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_18:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_132\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_108\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_110:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_112:\n        /* \"#utility.yul\":842:866   */\n      tag_137\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_107\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_138:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_113:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_140\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_112\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_22:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_143\n      tag_110\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1118:1237   */\n    tag_142:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_144\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_113\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1467   */\n    tag_114:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1454:1459   */\n      dup2\n        /* \"#utility.yul\":1447:1460   */\n      iszero\n        /* \"#utility.yul\":1440:1461   */\n      iszero\n        /* \"#utility.yul\":1429:1461   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1589   */\n    tag_115:\n        /* \"#utility.yul\":1543:1564   */\n      tag_147\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1543:1564   */\n      tag_114\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1533:1565   */\n      eq\n        /* \"#utility.yul\":1523:1583   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1579:1580   */\n      0x00\n        /* \"#utility.yul\":1576:1577   */\n      dup1\n        /* \"#utility.yul\":1569:1581   */\n      revert\n        /* \"#utility.yul\":1523:1583   */\n    tag_148:\n        /* \"#utility.yul\":1473:1589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1728   */\n    tag_116:\n        /* \"#utility.yul\":1638:1643   */\n      0x00\n        /* \"#utility.yul\":1676:1682   */\n      dup2\n        /* \"#utility.yul\":1663:1683   */\n      calldataload\n        /* \"#utility.yul\":1654:1683   */\n      swap1\n      pop\n        /* \"#utility.yul\":1692:1722   */\n      tag_150\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1692:1722   */\n      tag_115\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1595:1728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1734:2057   */\n    tag_34:\n        /* \"#utility.yul\":1790:1796   */\n      0x00\n        /* \"#utility.yul\":1839:1841   */\n      0x20\n        /* \"#utility.yul\":1827:1836   */\n      dup3\n        /* \"#utility.yul\":1818:1825   */\n      dup5\n        /* \"#utility.yul\":1814:1837   */\n      sub\n        /* \"#utility.yul\":1810:1842   */\n      slt\n        /* \"#utility.yul\":1807:1926   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1845:1924   */\n      tag_153\n      tag_110\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1807:1926   */\n    tag_152:\n        /* \"#utility.yul\":1965:1966   */\n      0x00\n        /* \"#utility.yul\":1990:2040   */\n      tag_154\n        /* \"#utility.yul\":2032:2039   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup3\n        /* \"#utility.yul\":2012:2021   */\n      dup6\n        /* \"#utility.yul\":2008:2030   */\n      add\n        /* \"#utility.yul\":1990:2040   */\n      tag_116\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1980:2040   */\n      swap2\n      pop\n        /* \"#utility.yul\":1936:2050   */\n      pop\n        /* \"#utility.yul\":1734:2057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2063:2189   */\n    tag_117:\n        /* \"#utility.yul\":2100:2107   */\n      0x00\n        /* \"#utility.yul\":2140:2182   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2133:2138   */\n      dup3\n        /* \"#utility.yul\":2129:2183   */\n      and\n        /* \"#utility.yul\":2118:2183   */\n      swap1\n      pop\n        /* \"#utility.yul\":2063:2189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2291   */\n    tag_118:\n        /* \"#utility.yul\":2232:2239   */\n      0x00\n        /* \"#utility.yul\":2261:2285   */\n      tag_157\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2261:2285   */\n      tag_117\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2250:2285   */\n      swap1\n      pop\n        /* \"#utility.yul\":2195:2291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2297:2415   */\n    tag_119:\n        /* \"#utility.yul\":2384:2408   */\n      tag_159\n        /* \"#utility.yul\":2402:2407   */\n      dup2\n        /* \"#utility.yul\":2384:2408   */\n      tag_118\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2379:2382   */\n      dup3\n        /* \"#utility.yul\":2372:2409   */\n      mstore\n        /* \"#utility.yul\":2297:2415   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2643   */\n    tag_43:\n        /* \"#utility.yul\":2514:2518   */\n      0x00\n        /* \"#utility.yul\":2552:2554   */\n      0x20\n        /* \"#utility.yul\":2541:2550   */\n      dup3\n        /* \"#utility.yul\":2537:2555   */\n      add\n        /* \"#utility.yul\":2529:2555   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2636   */\n      tag_161\n        /* \"#utility.yul\":2633:2634   */\n      0x00\n        /* \"#utility.yul\":2622:2631   */\n      dup4\n        /* \"#utility.yul\":2618:2635   */\n      add\n        /* \"#utility.yul\":2609:2615   */\n      dup5\n        /* \"#utility.yul\":2565:2636   */\n      tag_119\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2421:2643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2771   */\n    tag_120:\n        /* \"#utility.yul\":2722:2746   */\n      tag_163\n        /* \"#utility.yul\":2740:2745   */\n      dup2\n        /* \"#utility.yul\":2722:2746   */\n      tag_118\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2715:2720   */\n      dup2\n        /* \"#utility.yul\":2712:2747   */\n      eq\n        /* \"#utility.yul\":2702:2765   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2758:2759   */\n      dup1\n        /* \"#utility.yul\":2751:2763   */\n      revert\n        /* \"#utility.yul\":2702:2765   */\n    tag_164:\n        /* \"#utility.yul\":2649:2771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:2916   */\n    tag_121:\n        /* \"#utility.yul\":2823:2828   */\n      0x00\n        /* \"#utility.yul\":2861:2867   */\n      dup2\n        /* \"#utility.yul\":2848:2868   */\n      calldataload\n        /* \"#utility.yul\":2839:2868   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:2910   */\n      tag_166\n        /* \"#utility.yul\":2904:2909   */\n      dup2\n        /* \"#utility.yul\":2877:2910   */\n      tag_120\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2777:2916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3251   */\n    tag_51:\n        /* \"#utility.yul\":2981:2987   */\n      0x00\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3018:3027   */\n      dup3\n        /* \"#utility.yul\":3009:3016   */\n      dup5\n        /* \"#utility.yul\":3005:3028   */\n      sub\n        /* \"#utility.yul\":3001:3033   */\n      slt\n        /* \"#utility.yul\":2998:3117   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3036:3115   */\n      tag_169\n      tag_110\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2998:3117   */\n    tag_168:\n        /* \"#utility.yul\":3156:3157   */\n      0x00\n        /* \"#utility.yul\":3181:3234   */\n      tag_170\n        /* \"#utility.yul\":3226:3233   */\n      dup5\n        /* \"#utility.yul\":3217:3223   */\n      dup3\n        /* \"#utility.yul\":3206:3215   */\n      dup6\n        /* \"#utility.yul\":3202:3224   */\n      add\n        /* \"#utility.yul\":3181:3234   */\n      tag_121\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3171:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3244   */\n      pop\n        /* \"#utility.yul\":2922:3251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3257:3366   */\n    tag_122:\n        /* \"#utility.yul\":3338:3359   */\n      tag_172\n        /* \"#utility.yul\":3353:3358   */\n      dup2\n        /* \"#utility.yul\":3338:3359   */\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3333:3336   */\n      dup3\n        /* \"#utility.yul\":3326:3360   */\n      mstore\n        /* \"#utility.yul\":3257:3366   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3372:3582   */\n    tag_57:\n        /* \"#utility.yul\":3459:3463   */\n      0x00\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3486:3495   */\n      dup3\n        /* \"#utility.yul\":3482:3500   */\n      add\n        /* \"#utility.yul\":3474:3500   */\n      swap1\n      pop\n        /* \"#utility.yul\":3510:3575   */\n      tag_174\n        /* \"#utility.yul\":3572:3573   */\n      0x00\n        /* \"#utility.yul\":3561:3570   */\n      dup4\n        /* \"#utility.yul\":3557:3574   */\n      add\n        /* \"#utility.yul\":3548:3554   */\n      dup5\n        /* \"#utility.yul\":3510:3575   */\n      tag_122\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3372:3582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3757   */\n    tag_123:\n        /* \"#utility.yul\":3672:3683   */\n      0x00\n        /* \"#utility.yul\":3706:3712   */\n      dup3\n        /* \"#utility.yul\":3701:3704   */\n      dup3\n        /* \"#utility.yul\":3694:3713   */\n      mstore\n        /* \"#utility.yul\":3746:3750   */\n      0x20\n        /* \"#utility.yul\":3741:3744   */\n      dup3\n        /* \"#utility.yul\":3737:3751   */\n      add\n        /* \"#utility.yul\":3722:3751   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3763:3992   */\n    tag_124:\n        /* \"#utility.yul\":3903:3937   */\n      0x436f756e7465722063616e2062652075706461746564206f6e6c79207768656e\n        /* \"#utility.yul\":3899:3900   */\n      0x00\n        /* \"#utility.yul\":3891:3897   */\n      dup3\n        /* \"#utility.yul\":3887:3901   */\n      add\n        /* \"#utility.yul\":3880:3938   */\n      mstore\n        /* \"#utility.yul\":3972:3984   */\n      0x2061637469766174656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3967:3969   */\n      0x20\n        /* \"#utility.yul\":3959:3965   */\n      dup3\n        /* \"#utility.yul\":3955:3970   */\n      add\n        /* \"#utility.yul\":3948:3985   */\n      mstore\n        /* \"#utility.yul\":3763:3992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3998:4364   */\n    tag_125:\n        /* \"#utility.yul\":4140:4143   */\n      0x00\n        /* \"#utility.yul\":4161:4228   */\n      tag_178\n        /* \"#utility.yul\":4225:4227   */\n      0x2a\n        /* \"#utility.yul\":4220:4223   */\n      dup4\n        /* \"#utility.yul\":4161:4228   */\n      tag_123\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4154:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4237:4330   */\n      tag_179\n        /* \"#utility.yul\":4326:4329   */\n      dup3\n        /* \"#utility.yul\":4237:4330   */\n      tag_124\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4355:4357   */\n      0x40\n        /* \"#utility.yul\":4350:4353   */\n      dup3\n        /* \"#utility.yul\":4346:4358   */\n      add\n        /* \"#utility.yul\":4339:4358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3998:4364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4370:4789   */\n    tag_80:\n        /* \"#utility.yul\":4536:4540   */\n      0x00\n        /* \"#utility.yul\":4574:4576   */\n      0x20\n        /* \"#utility.yul\":4563:4572   */\n      dup3\n        /* \"#utility.yul\":4559:4577   */\n      add\n        /* \"#utility.yul\":4551:4577   */\n      swap1\n      pop\n        /* \"#utility.yul\":4623:4632   */\n      dup2\n        /* \"#utility.yul\":4617:4621   */\n      dup2\n        /* \"#utility.yul\":4613:4633   */\n      sub\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4598:4607   */\n      dup4\n        /* \"#utility.yul\":4594:4611   */\n      add\n        /* \"#utility.yul\":4587:4634   */\n      mstore\n        /* \"#utility.yul\":4651:4782   */\n      tag_181\n        /* \"#utility.yul\":4777:4781   */\n      dup2\n        /* \"#utility.yul\":4651:4782   */\n      tag_125\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4643:4782   */\n      swap1\n      pop\n        /* \"#utility.yul\":4370:4789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4795:4975   */\n    tag_126:\n        /* \"#utility.yul\":4843:4920   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4840:4841   */\n      0x00\n        /* \"#utility.yul\":4833:4921   */\n      mstore\n        /* \"#utility.yul\":4940:4944   */\n      0x11\n        /* \"#utility.yul\":4937:4938   */\n      0x04\n        /* \"#utility.yul\":4930:4945   */\n      mstore\n        /* \"#utility.yul\":4964:4968   */\n      0x24\n        /* \"#utility.yul\":4961:4962   */\n      0x00\n        /* \"#utility.yul\":4954:4969   */\n      revert\n        /* \"#utility.yul\":4981:5214   */\n    tag_84:\n        /* \"#utility.yul\":5020:5023   */\n      0x00\n        /* \"#utility.yul\":5043:5067   */\n      tag_184\n        /* \"#utility.yul\":5061:5066   */\n      dup3\n        /* \"#utility.yul\":5043:5067   */\n      tag_107\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5034:5067   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5155   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5082:5087   */\n      dup3\n        /* \"#utility.yul\":5079:5156   */\n      sub\n        /* \"#utility.yul\":5076:5179   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":5159:5177   */\n      tag_186\n      tag_126\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5076:5179   */\n    tag_185:\n        /* \"#utility.yul\":5206:5207   */\n      0x01\n        /* \"#utility.yul\":5199:5204   */\n      dup3\n        /* \"#utility.yul\":5195:5208   */\n      add\n        /* \"#utility.yul\":5188:5208   */\n      swap1\n      pop\n        /* \"#utility.yul\":4981:5214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5220:5391   */\n    tag_91:\n        /* \"#utility.yul\":5259:5262   */\n      0x00\n        /* \"#utility.yul\":5282:5306   */\n      tag_188\n        /* \"#utility.yul\":5300:5305   */\n      dup3\n        /* \"#utility.yul\":5282:5306   */\n      tag_107\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5273:5306   */\n      swap2\n      pop\n        /* \"#utility.yul\":5328:5332   */\n      0x00\n        /* \"#utility.yul\":5321:5326   */\n      dup3\n        /* \"#utility.yul\":5318:5333   */\n      sub\n        /* \"#utility.yul\":5315:5356   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5336:5354   */\n      tag_190\n      tag_126\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5315:5356   */\n    tag_189:\n        /* \"#utility.yul\":5383:5384   */\n      0x01\n        /* \"#utility.yul\":5376:5381   */\n      dup3\n        /* \"#utility.yul\":5372:5385   */\n      sub\n        /* \"#utility.yul\":5365:5385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5220:5391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220078fc13f97dd34fc6db584f9a1c2b758ec79a6445e3e86f330efb2b47727999f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_208": {
									"entryPoint": null,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 253,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1809:4",
										"nodeType": "YulBlock",
										"src": "0:1809:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "689:73:4",
													"nodeType": "YulBlock",
													"src": "689:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "706:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "711:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "699:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:4"
																},
																"nativeSrc": "699:19:4",
																"nodeType": "YulFunctionCall",
																"src": "699:19:4"
															},
															"nativeSrc": "699:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "699:19:4"
														},
														{
															"nativeSrc": "727:29:4",
															"nodeType": "YulAssignment",
															"src": "727:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "746:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:4:4",
																		"nodeType": "YulLiteral",
																		"src": "751:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "742:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:4"
																},
																"nativeSrc": "742:14:4",
																"nodeType": "YulFunctionCall",
																"src": "742:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "727:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "593:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "661:3:4",
														"nodeType": "YulTypedName",
														"src": "661:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "666:6:4",
														"nodeType": "YulTypedName",
														"src": "666:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "677:11:4",
														"nodeType": "YulTypedName",
														"src": "677:11:4",
														"type": ""
													}
												],
												"src": "593:169:4"
											},
											{
												"body": {
													"nativeSrc": "874:135:4",
													"nodeType": "YulBlock",
													"src": "874:135:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "896:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "904:1:4",
																				"nodeType": "YulLiteral",
																				"src": "904:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "892:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:4"
																		},
																		"nativeSrc": "892:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:4"
																	},
																	{
																		"hexValue": "4d696e696d756d2076616c756520746f206465706f73697420746f2074686520",
																		"kind": "string",
																		"nativeSrc": "908:34:4",
																		"nodeType": "YulLiteral",
																		"src": "908:34:4",
																		"type": "",
																		"value": "Minimum value to deposit to the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "885:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:4"
																},
																"nativeSrc": "885:58:4",
																"nodeType": "YulFunctionCall",
																"src": "885:58:4"
															},
															"nativeSrc": "885:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "885:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "972:2:4",
																				"nodeType": "YulLiteral",
																				"src": "972:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "960:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:4"
																		},
																		"nativeSrc": "960:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "960:15:4"
																	},
																	{
																		"hexValue": "636f6e747261637420697320302e3032206574686572",
																		"kind": "string",
																		"nativeSrc": "977:24:4",
																		"nodeType": "YulLiteral",
																		"src": "977:24:4",
																		"type": "",
																		"value": "contract is 0.02 ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "953:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "953:6:4"
																},
																"nativeSrc": "953:49:4",
																"nodeType": "YulFunctionCall",
																"src": "953:49:4"
															},
															"nativeSrc": "953:49:4",
															"nodeType": "YulExpressionStatement",
															"src": "953:49:4"
														}
													]
												},
												"name": "store_literal_in_memory_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05",
												"nativeSrc": "768:241:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "866:6:4",
														"nodeType": "YulTypedName",
														"src": "866:6:4",
														"type": ""
													}
												],
												"src": "768:241:4"
											},
											{
												"body": {
													"nativeSrc": "1161:220:4",
													"nodeType": "YulBlock",
													"src": "1161:220:4",
													"statements": [
														{
															"nativeSrc": "1171:74:4",
															"nodeType": "YulAssignment",
															"src": "1171:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1237:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1237:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1242:2:4",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1178:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "1178:58:4"
																},
																"nativeSrc": "1178:67:4",
																"nodeType": "YulFunctionCall",
																"src": "1178:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1171:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1171:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1343:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1343:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05",
																	"nativeSrc": "1254:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "1254:88:4"
																},
																"nativeSrc": "1254:93:4",
																"nodeType": "YulFunctionCall",
																"src": "1254:93:4"
															},
															"nativeSrc": "1254:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "1254:93:4"
														},
														{
															"nativeSrc": "1356:19:4",
															"nodeType": "YulAssignment",
															"src": "1356:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1372:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1363:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:4"
																},
																"nativeSrc": "1363:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1363:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1356:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1356:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1015:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1149:3:4",
														"nodeType": "YulTypedName",
														"src": "1149:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1157:3:4",
														"nodeType": "YulTypedName",
														"src": "1157:3:4",
														"type": ""
													}
												],
												"src": "1015:366:4"
											},
											{
												"body": {
													"nativeSrc": "1558:248:4",
													"nodeType": "YulBlock",
													"src": "1558:248:4",
													"statements": [
														{
															"nativeSrc": "1568:26:4",
															"nodeType": "YulAssignment",
															"src": "1568:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1580:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1580:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1591:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1591:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1576:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:4"
																},
																"nativeSrc": "1576:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1576:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1568:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1568:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1615:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1615:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1626:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1626:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1611:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:4"
																		},
																		"nativeSrc": "1611:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1634:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1634:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1630:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:4"
																		},
																		"nativeSrc": "1630:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1604:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:4"
																},
																"nativeSrc": "1604:47:4",
																"nodeType": "YulFunctionCall",
																"src": "1604:47:4"
															},
															"nativeSrc": "1604:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "1604:47:4"
														},
														{
															"nativeSrc": "1660:139:4",
															"nodeType": "YulAssignment",
															"src": "1660:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1794:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1794:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1668:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "1668:124:4"
																},
																"nativeSrc": "1668:131:4",
																"nodeType": "YulFunctionCall",
																"src": "1668:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1660:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1660:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1387:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1538:9:4",
														"nodeType": "YulTypedName",
														"src": "1538:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1553:4:4",
														"nodeType": "YulTypedName",
														"src": "1553:4:4",
														"type": ""
													}
												],
												"src": "1387:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum value to deposit to the \")\n\n        mstore(add(memPtr, 32), \"contract is 0.02 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600155600160025f6101000a81548160ff021916908315150217905550662386f26fc10000600355335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009e575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009591906101fd565b60405180910390fd5b6100ad816100fd60201b60201c565b5066470de4df8200003410156100f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ef90610296565b60405180910390fd5b6102b4565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e7826101be565b9050919050565b6101f7816101dd565b82525050565b5f6020820190506102105f8301846101ee565b92915050565b5f82825260208201905092915050565b7f4d696e696d756d2076616c756520746f206465706f73697420746f20746865205f8201527f636f6e747261637420697320302e303220657468657200000000000000000000602082015250565b5f610280603683610216565b915061028b82610226565b604082019050919050565b5f6020820190508181035f8301526102ad81610274565b9050919050565b6108e3806102c15f395ff3fe60806040526004361061009b575f3560e01c8063715018a611610063578063715018a6146101595780638da5cb5b1461016f578063abd1b73d14610199578063e834cbb3146101a3578063f2fde38b146101ad578063ffc959f7146101d55761009b565b806306661abd1461009f5780631236b529146100c95780632048ff11146100f157806324600fc31461011b57806368fcb1c114610131575b5f80fd5b3480156100aa575f80fd5b506100b36101ff565b6040516100c091906105cd565b60405180910390f35b3480156100d4575f80fd5b506100ef60048036038101906100ea9190610614565b610205565b005b3480156100fc575f80fd5b50610105610217565b60405161011291906105cd565b60405180910390f35b348015610126575f80fd5b5061012f61021d565b005b34801561013c575f80fd5b5061015760048036038101906101529190610674565b61027c565b005b348015610164575f80fd5b5061016d6102a0565b005b34801561017a575f80fd5b506101836102b3565b60405161019091906106de565b60405180910390f35b6101a16102da565b005b6101ab610355565b005b3480156101b8575f80fd5b506101d360048036038101906101ce9190610721565b6103d0565b005b3480156101e0575f80fd5b506101e9610454565b6040516101f6919061075b565b60405180910390f35b60015481565b61020d610466565b8060038190555050565b60035481565b610225610466565b5f61022e6102b3565b90505f4790508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610277573d5f803e3d5ffd5b505050565b610284610466565b8060025f6101000a81548160ff02191690831515021790555050565b6102a8610466565b6102b15f6104ed565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001151560025f9054906101000a900460ff1615151461032f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610326906107f4565b60405180910390fd5b600354341461033c575f80fd5b60015f81548092919061034e9061083f565b9190505550565b6001151560025f9054906101000a900460ff161515146103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a1906107f4565b60405180910390fd5b60035434146103b7575f80fd5b60015f8154809291906103c990610886565b9190505550565b6103d8610466565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610448575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043f91906106de565b60405180910390fd5b610451816104ed565b50565b60025f9054906101000a900460ff1681565b61046e6105ae565b73ffffffffffffffffffffffffffffffffffffffff1661048c6102b3565b73ffffffffffffffffffffffffffffffffffffffff16146104eb576104af6105ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104e291906106de565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6105c7816105b5565b82525050565b5f6020820190506105e05f8301846105be565b92915050565b5f80fd5b6105f3816105b5565b81146105fd575f80fd5b50565b5f8135905061060e816105ea565b92915050565b5f60208284031215610629576106286105e6565b5b5f61063684828501610600565b91505092915050565b5f8115159050919050565b6106538161063f565b811461065d575f80fd5b50565b5f8135905061066e8161064a565b92915050565b5f60208284031215610689576106886105e6565b5b5f61069684828501610660565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c88261069f565b9050919050565b6106d8816106be565b82525050565b5f6020820190506106f15f8301846106cf565b92915050565b610700816106be565b811461070a575f80fd5b50565b5f8135905061071b816106f7565b92915050565b5f60208284031215610736576107356105e6565b5b5f6107438482850161070d565b91505092915050565b6107558161063f565b82525050565b5f60208201905061076e5f83018461074c565b92915050565b5f82825260208201905092915050565b7f436f756e7465722063616e2062652075706461746564206f6e6c79207768656e5f8201527f2061637469766174656400000000000000000000000000000000000000000000602082015250565b5f6107de602a83610774565b91506107e982610784565b604082019050919050565b5f6020820190508181035f83015261080b816107d2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610849826105b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361087b5761087a610812565b5b600182019050919050565b5f610890826105b5565b91505f82036108a2576108a1610812565b5b60018203905091905056fea2646970667358221220078fc13f97dd34fc6db584f9a1c2b758ec79a6445e3e86f330efb2b47727999f64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x3 SSTORE CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD DUP2 PUSH2 0xFD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH7 0x470DE4DF820000 CALLVALUE LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF SWAP1 PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D2076616C756520746F206465706F73697420746F2074686520 PUSH0 DUP3 ADD MSTORE PUSH32 0x636F6E747261637420697320302E303220657468657200000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x280 PUSH1 0x36 DUP4 PUSH2 0x216 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B DUP3 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AD DUP2 PUSH2 0x274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E3 DUP1 PUSH2 0x2C1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xE834CBB3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xFFC959F7 EQ PUSH2 0x1D5 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1236B529 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x2048FF11 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x68FCB1C1 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x466 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH2 0x22E PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP PUSH0 SELFBALANCE SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x466 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x2B1 PUSH0 PUSH2 0x4ED JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x34E SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3C9 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x448 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x451 DUP2 PUSH2 0x4ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x5AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EB JUMPI PUSH2 0x4AF PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C7 DUP2 PUSH2 0x5B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F3 DUP2 PUSH2 0x5B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x60E DUP2 PUSH2 0x5EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x629 JUMPI PUSH2 0x628 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x636 DUP5 DUP3 DUP6 ADD PUSH2 0x600 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x653 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP2 EQ PUSH2 0x65D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x64A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x696 DUP5 DUP3 DUP6 ADD PUSH2 0x660 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C8 DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x6CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP2 EQ PUSH2 0x70A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x71B DUP2 PUSH2 0x6F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x736 JUMPI PUSH2 0x735 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x70D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x76E PUSH0 DUP4 ADD DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722063616E2062652075706461746564206F6E6C79207768656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2061637469766174656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7DE PUSH1 0x2A DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E9 DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x80B DUP2 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x849 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x812 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x8A2 JUMPI PUSH2 0x8A1 PUSH2 0x812 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD DUP16 0xC1 EXTCODEHASH SWAP8 0xDD CALLVALUE 0xFC PUSH14 0xB584F9A1C2B758EC79A6445E3E86 RETURN ADDRESS 0xEF 0xB2 0xB4 PUSH24 0x27999F64736F6C6343000819003300000000000000000000 ",
							"sourceMap": "239:1556:2:-:0;;;351:1;331:21;;390:4;359:35;;;;;;;;;;;;;;;;;;;;431:10;401:40;;275:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;562:10:2;549:9;:23;;541:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;239:1556;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:241::-;908:34;904:1;896:6;892:14;885:58;977:24;972:2;964:6;960:15;953:49;768:241;:::o;1015:366::-;1157:3;1178:67;1242:2;1237:3;1178:67;:::i;:::-;1171:74;;1254:93;1343:3;1254:93;:::i;:::-;1372:2;1367:3;1363:12;1356:19;;1015:366;;;:::o;1387:419::-;1553:4;1591:2;1580:9;1576:18;1568:26;;1640:9;1634:4;1630:20;1626:1;1615:9;1611:17;1604:47;1668:131;1794:4;1668:131;:::i;:::-;1660:139;;1387:419;;;:::o;239:1556:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1126,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1454,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1261,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@count_190": {
									"entryPoint": 511,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@counterActivated_193": {
									"entryPoint": 1108,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decreaseCount_275": {
									"entryPoint": 853,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseCount_259": {
									"entryPoint": 730,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 691,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 672,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCounterActivated_243": {
									"entryPoint": 636,
									"id": 243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTransactionCost_231": {
									"entryPoint": 517,
									"id": 231,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transactionCost_196": {
									"entryPoint": 535,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 976,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_303": {
									"entryPoint": 541,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5394:4",
										"nodeType": "YulBlock",
										"src": "0:5394:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "155:53:4",
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nativeSrc": "177:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nativeSrc": "165:37:4",
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nativeSrc": "165:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:4",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:4",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nativeSrc": "312:124:4",
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nativeSrc": "322:26:4",
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:4",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nativeSrc": "330:18:4",
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:4",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nativeSrc": "411:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nativeSrc": "358:71:4",
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nativeSrc": "358:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:4",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:4",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nativeSrc": "482:35:4",
													"nodeType": "YulBlock",
													"src": "482:35:4",
													"statements": [
														{
															"nativeSrc": "492:19:4",
															"nodeType": "YulAssignment",
															"src": "492:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:4",
																		"nodeType": "YulLiteral",
																		"src": "508:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:4"
																},
																"nativeSrc": "502:9:4",
																"nodeType": "YulFunctionCall",
																"src": "502:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:4",
														"nodeType": "YulTypedName",
														"src": "475:6:4",
														"type": ""
													}
												],
												"src": "442:75:4"
											},
											{
												"body": {
													"nativeSrc": "612:28:4",
													"nodeType": "YulBlock",
													"src": "612:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:4",
																		"nodeType": "YulLiteral",
																		"src": "629:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:4",
																		"nodeType": "YulLiteral",
																		"src": "632:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:4"
																},
																"nativeSrc": "622:12:4",
																"nodeType": "YulFunctionCall",
																"src": "622:12:4"
															},
															"nativeSrc": "622:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:4"
											},
											{
												"body": {
													"nativeSrc": "735:28:4",
													"nodeType": "YulBlock",
													"src": "735:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:4",
																		"nodeType": "YulLiteral",
																		"src": "752:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:4",
																		"nodeType": "YulLiteral",
																		"src": "755:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:4"
																},
																"nativeSrc": "745:12:4",
																"nodeType": "YulFunctionCall",
																"src": "745:12:4"
															},
															"nativeSrc": "745:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:4"
											},
											{
												"body": {
													"nativeSrc": "812:79:4",
													"nodeType": "YulBlock",
													"src": "812:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:4",
																"nodeType": "YulBlock",
																"src": "869:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:4",
																					"nodeType": "YulLiteral",
																					"src": "878:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:4",
																					"nodeType": "YulLiteral",
																					"src": "881:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:4"
																			},
																			"nativeSrc": "871:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:4"
																		},
																		"nativeSrc": "871:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:4"
																				},
																				"nativeSrc": "842:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:4"
																		},
																		"nativeSrc": "832:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:4"
																},
																"nativeSrc": "825:43:4",
																"nodeType": "YulFunctionCall",
																"src": "825:43:4"
															},
															"nativeSrc": "822:63:4",
															"nodeType": "YulIf",
															"src": "822:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:4",
														"nodeType": "YulTypedName",
														"src": "805:5:4",
														"type": ""
													}
												],
												"src": "769:122:4"
											},
											{
												"body": {
													"nativeSrc": "949:87:4",
													"nodeType": "YulBlock",
													"src": "949:87:4",
													"statements": [
														{
															"nativeSrc": "959:29:4",
															"nodeType": "YulAssignment",
															"src": "959:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:4"
																},
																"nativeSrc": "968:20:4",
																"nodeType": "YulFunctionCall",
																"src": "968:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:4"
																},
																"nativeSrc": "997:33:4",
																"nodeType": "YulFunctionCall",
																"src": "997:33:4"
															},
															"nativeSrc": "997:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:4",
														"nodeType": "YulTypedName",
														"src": "927:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:4",
														"nodeType": "YulTypedName",
														"src": "935:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:4",
														"nodeType": "YulTypedName",
														"src": "943:5:4",
														"type": ""
													}
												],
												"src": "897:139:4"
											},
											{
												"body": {
													"nativeSrc": "1108:263:4",
													"nodeType": "YulBlock",
													"src": "1108:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:4",
																"nodeType": "YulBlock",
																"src": "1154:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:4"
																			},
																			"nativeSrc": "1156:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:4"
																		},
																		"nativeSrc": "1156:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:4"
																		},
																		"nativeSrc": "1125:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:4"
																},
																"nativeSrc": "1121:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:4"
															},
															"nativeSrc": "1118:119:4",
															"nodeType": "YulIf",
															"src": "1118:119:4"
														},
														{
															"nativeSrc": "1247:117:4",
															"nodeType": "YulBlock",
															"src": "1247:117:4",
															"statements": [
																{
																	"nativeSrc": "1262:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:4"
																				},
																				"nativeSrc": "1322:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:4"
																		},
																		"nativeSrc": "1301:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:4",
														"nodeType": "YulTypedName",
														"src": "1078:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:4",
														"nodeType": "YulTypedName",
														"src": "1089:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:4",
														"nodeType": "YulTypedName",
														"src": "1101:6:4",
														"type": ""
													}
												],
												"src": "1042:329:4"
											},
											{
												"body": {
													"nativeSrc": "1419:48:4",
													"nodeType": "YulBlock",
													"src": "1419:48:4",
													"statements": [
														{
															"nativeSrc": "1429:32:4",
															"nodeType": "YulAssignment",
															"src": "1429:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1454:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1454:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1447:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1447:6:4"
																		},
																		"nativeSrc": "1447:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1447:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1440:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:4"
																},
																"nativeSrc": "1440:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1440:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1429:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1377:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1401:5:4",
														"nodeType": "YulTypedName",
														"src": "1401:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1411:7:4",
														"nodeType": "YulTypedName",
														"src": "1411:7:4",
														"type": ""
													}
												],
												"src": "1377:90:4"
											},
											{
												"body": {
													"nativeSrc": "1513:76:4",
													"nodeType": "YulBlock",
													"src": "1513:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1567:16:4",
																"nodeType": "YulBlock",
																"src": "1567:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1576:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1576:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1579:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1569:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:4"
																			},
																			"nativeSrc": "1569:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1569:12:4"
																		},
																		"nativeSrc": "1569:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1569:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1536:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1536:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1558:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1558:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1543:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "1543:14:4"
																				},
																				"nativeSrc": "1543:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1543:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1533:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1533:2:4"
																		},
																		"nativeSrc": "1533:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1533:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1526:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:4"
																},
																"nativeSrc": "1526:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1526:40:4"
															},
															"nativeSrc": "1523:60:4",
															"nodeType": "YulIf",
															"src": "1523:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1473:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1506:5:4",
														"nodeType": "YulTypedName",
														"src": "1506:5:4",
														"type": ""
													}
												],
												"src": "1473:116:4"
											},
											{
												"body": {
													"nativeSrc": "1644:84:4",
													"nodeType": "YulBlock",
													"src": "1644:84:4",
													"statements": [
														{
															"nativeSrc": "1654:29:4",
															"nodeType": "YulAssignment",
															"src": "1654:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1676:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:4"
																},
																"nativeSrc": "1663:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1663:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1716:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1716:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1692:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "1692:23:4"
																},
																"nativeSrc": "1692:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1692:30:4"
															},
															"nativeSrc": "1692:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1692:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "1595:133:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1622:6:4",
														"nodeType": "YulTypedName",
														"src": "1622:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1630:3:4",
														"nodeType": "YulTypedName",
														"src": "1630:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1638:5:4",
														"nodeType": "YulTypedName",
														"src": "1638:5:4",
														"type": ""
													}
												],
												"src": "1595:133:4"
											},
											{
												"body": {
													"nativeSrc": "1797:260:4",
													"nodeType": "YulBlock",
													"src": "1797:260:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1843:83:4",
																"nodeType": "YulBlock",
																"src": "1843:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1845:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1845:77:4"
																			},
																			"nativeSrc": "1845:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1845:79:4"
																		},
																		"nativeSrc": "1845:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1845:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1818:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1818:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1827:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1827:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1814:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1814:3:4"
																		},
																		"nativeSrc": "1814:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1814:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1839:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1810:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1810:3:4"
																},
																"nativeSrc": "1810:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1810:32:4"
															},
															"nativeSrc": "1807:119:4",
															"nodeType": "YulIf",
															"src": "1807:119:4"
														},
														{
															"nativeSrc": "1936:114:4",
															"nodeType": "YulBlock",
															"src": "1936:114:4",
															"statements": [
																{
																	"nativeSrc": "1951:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1951:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1965:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1955:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1955:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1980:60:4",
																	"nodeType": "YulAssignment",
																	"src": "1980:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2012:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2012:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2023:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2023:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2008:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2008:3:4"
																				},
																				"nativeSrc": "2008:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2008:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2032:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2032:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1990:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1990:17:4"
																		},
																		"nativeSrc": "1990:50:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1990:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1980:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1980:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "1734:323:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:4",
														"nodeType": "YulTypedName",
														"src": "1767:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1778:7:4",
														"nodeType": "YulTypedName",
														"src": "1778:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1790:6:4",
														"nodeType": "YulTypedName",
														"src": "1790:6:4",
														"type": ""
													}
												],
												"src": "1734:323:4"
											},
											{
												"body": {
													"nativeSrc": "2108:81:4",
													"nodeType": "YulBlock",
													"src": "2108:81:4",
													"statements": [
														{
															"nativeSrc": "2118:65:4",
															"nodeType": "YulAssignment",
															"src": "2118:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2133:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2133:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2140:42:4",
																		"nodeType": "YulLiteral",
																		"src": "2140:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2129:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2129:3:4"
																},
																"nativeSrc": "2129:54:4",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2118:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2118:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2063:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2090:5:4",
														"nodeType": "YulTypedName",
														"src": "2090:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2100:7:4",
														"nodeType": "YulTypedName",
														"src": "2100:7:4",
														"type": ""
													}
												],
												"src": "2063:126:4"
											},
											{
												"body": {
													"nativeSrc": "2240:51:4",
													"nodeType": "YulBlock",
													"src": "2240:51:4",
													"statements": [
														{
															"nativeSrc": "2250:35:4",
															"nodeType": "YulAssignment",
															"src": "2250:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2261:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2261:17:4"
																},
																"nativeSrc": "2261:24:4",
																"nodeType": "YulFunctionCall",
																"src": "2261:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2250:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2250:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2195:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2222:5:4",
														"nodeType": "YulTypedName",
														"src": "2222:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2232:7:4",
														"nodeType": "YulTypedName",
														"src": "2232:7:4",
														"type": ""
													}
												],
												"src": "2195:96:4"
											},
											{
												"body": {
													"nativeSrc": "2362:53:4",
													"nodeType": "YulBlock",
													"src": "2362:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2379:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2402:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2402:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2384:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2384:17:4"
																		},
																		"nativeSrc": "2384:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2384:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2372:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:4"
																},
																"nativeSrc": "2372:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2372:37:4"
															},
															"nativeSrc": "2372:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2372:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2297:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2350:5:4",
														"nodeType": "YulTypedName",
														"src": "2350:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2357:3:4",
														"nodeType": "YulTypedName",
														"src": "2357:3:4",
														"type": ""
													}
												],
												"src": "2297:118:4"
											},
											{
												"body": {
													"nativeSrc": "2519:124:4",
													"nodeType": "YulBlock",
													"src": "2519:124:4",
													"statements": [
														{
															"nativeSrc": "2529:26:4",
															"nodeType": "YulAssignment",
															"src": "2529:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2541:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2541:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2552:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2537:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:4"
																},
																"nativeSrc": "2537:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2537:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2529:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2609:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2609:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2622:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2622:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2633:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2633:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2618:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:4"
																		},
																		"nativeSrc": "2618:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2565:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2565:43:4"
																},
																"nativeSrc": "2565:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2565:71:4"
															},
															"nativeSrc": "2565:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2565:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2421:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2491:9:4",
														"nodeType": "YulTypedName",
														"src": "2491:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2503:6:4",
														"nodeType": "YulTypedName",
														"src": "2503:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2514:4:4",
														"nodeType": "YulTypedName",
														"src": "2514:4:4",
														"type": ""
													}
												],
												"src": "2421:222:4"
											},
											{
												"body": {
													"nativeSrc": "2692:79:4",
													"nodeType": "YulBlock",
													"src": "2692:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2749:16:4",
																"nodeType": "YulBlock",
																"src": "2749:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2758:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2761:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2751:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:4"
																			},
																			"nativeSrc": "2751:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2751:12:4"
																		},
																		"nativeSrc": "2751:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2715:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2715:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2740:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2740:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2722:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2722:17:4"
																				},
																				"nativeSrc": "2722:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2722:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2712:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2712:2:4"
																		},
																		"nativeSrc": "2712:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2705:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:4"
																},
																"nativeSrc": "2705:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2705:43:4"
															},
															"nativeSrc": "2702:63:4",
															"nodeType": "YulIf",
															"src": "2702:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2649:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:4",
														"nodeType": "YulTypedName",
														"src": "2685:5:4",
														"type": ""
													}
												],
												"src": "2649:122:4"
											},
											{
												"body": {
													"nativeSrc": "2829:87:4",
													"nodeType": "YulBlock",
													"src": "2829:87:4",
													"statements": [
														{
															"nativeSrc": "2839:29:4",
															"nodeType": "YulAssignment",
															"src": "2839:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2861:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2848:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2848:12:4"
																},
																"nativeSrc": "2848:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2848:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2839:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2839:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2904:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2904:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2877:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2877:26:4"
																},
																"nativeSrc": "2877:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2877:33:4"
															},
															"nativeSrc": "2877:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2877:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2777:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2807:6:4",
														"nodeType": "YulTypedName",
														"src": "2807:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2815:3:4",
														"nodeType": "YulTypedName",
														"src": "2815:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2823:5:4",
														"nodeType": "YulTypedName",
														"src": "2823:5:4",
														"type": ""
													}
												],
												"src": "2777:139:4"
											},
											{
												"body": {
													"nativeSrc": "2988:263:4",
													"nodeType": "YulBlock",
													"src": "2988:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3034:83:4",
																"nodeType": "YulBlock",
																"src": "3034:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3036:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3036:77:4"
																			},
																			"nativeSrc": "3036:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:79:4"
																		},
																		"nativeSrc": "3036:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3009:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3009:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3005:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:4"
																		},
																		"nativeSrc": "3005:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3030:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3030:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3001:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:4"
																},
																"nativeSrc": "3001:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3001:32:4"
															},
															"nativeSrc": "2998:119:4",
															"nodeType": "YulIf",
															"src": "2998:119:4"
														},
														{
															"nativeSrc": "3127:117:4",
															"nodeType": "YulBlock",
															"src": "3127:117:4",
															"statements": [
																{
																	"nativeSrc": "3142:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3142:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3156:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3156:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3146:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3146:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3171:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3171:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3206:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3206:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3217:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3217:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3202:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:4"
																				},
																				"nativeSrc": "3202:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3202:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3181:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3181:20:4"
																		},
																		"nativeSrc": "3181:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3171:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3171:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2922:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2958:9:4",
														"nodeType": "YulTypedName",
														"src": "2958:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2969:7:4",
														"nodeType": "YulTypedName",
														"src": "2969:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2981:6:4",
														"nodeType": "YulTypedName",
														"src": "2981:6:4",
														"type": ""
													}
												],
												"src": "2922:329:4"
											},
											{
												"body": {
													"nativeSrc": "3316:50:4",
													"nodeType": "YulBlock",
													"src": "3316:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3333:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3333:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3353:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3353:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3338:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "3338:14:4"
																		},
																		"nativeSrc": "3338:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3338:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3326:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:4"
																},
																"nativeSrc": "3326:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3326:34:4"
															},
															"nativeSrc": "3326:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3326:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3257:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:4",
														"nodeType": "YulTypedName",
														"src": "3304:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3311:3:4",
														"nodeType": "YulTypedName",
														"src": "3311:3:4",
														"type": ""
													}
												],
												"src": "3257:109:4"
											},
											{
												"body": {
													"nativeSrc": "3464:118:4",
													"nodeType": "YulBlock",
													"src": "3464:118:4",
													"statements": [
														{
															"nativeSrc": "3474:26:4",
															"nodeType": "YulAssignment",
															"src": "3474:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3486:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3486:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3497:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3482:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3482:3:4"
																},
																"nativeSrc": "3482:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3482:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3474:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3474:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3548:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3548:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3572:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:4"
																		},
																		"nativeSrc": "3557:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3510:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "3510:37:4"
																},
																"nativeSrc": "3510:65:4",
																"nodeType": "YulFunctionCall",
																"src": "3510:65:4"
															},
															"nativeSrc": "3510:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "3510:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3372:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3436:9:4",
														"nodeType": "YulTypedName",
														"src": "3436:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3448:6:4",
														"nodeType": "YulTypedName",
														"src": "3448:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3459:4:4",
														"nodeType": "YulTypedName",
														"src": "3459:4:4",
														"type": ""
													}
												],
												"src": "3372:210:4"
											},
											{
												"body": {
													"nativeSrc": "3684:73:4",
													"nodeType": "YulBlock",
													"src": "3684:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3701:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3706:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3706:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3694:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3694:6:4"
																},
																"nativeSrc": "3694:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3694:19:4"
															},
															"nativeSrc": "3694:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3694:19:4"
														},
														{
															"nativeSrc": "3722:29:4",
															"nodeType": "YulAssignment",
															"src": "3722:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3741:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3746:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3746:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3737:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:4"
																},
																"nativeSrc": "3737:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3737:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3722:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3722:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3588:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3656:3:4",
														"nodeType": "YulTypedName",
														"src": "3656:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3661:6:4",
														"nodeType": "YulTypedName",
														"src": "3661:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3672:11:4",
														"nodeType": "YulTypedName",
														"src": "3672:11:4",
														"type": ""
													}
												],
												"src": "3588:169:4"
											},
											{
												"body": {
													"nativeSrc": "3869:123:4",
													"nodeType": "YulBlock",
													"src": "3869:123:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3891:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3891:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3899:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3899:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3887:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:4"
																		},
																		"nativeSrc": "3887:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:14:4"
																	},
																	{
																		"hexValue": "436f756e7465722063616e2062652075706461746564206f6e6c79207768656e",
																		"kind": "string",
																		"nativeSrc": "3903:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3903:34:4",
																		"type": "",
																		"value": "Counter can be updated only when"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:4"
																},
																"nativeSrc": "3880:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3880:58:4"
															},
															"nativeSrc": "3880:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3880:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3959:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3959:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3967:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3955:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:4"
																		},
																		"nativeSrc": "3955:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3955:15:4"
																	},
																	{
																		"hexValue": "20616374697661746564",
																		"kind": "string",
																		"nativeSrc": "3972:12:4",
																		"nodeType": "YulLiteral",
																		"src": "3972:12:4",
																		"type": "",
																		"value": " activated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3948:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:4"
																},
																"nativeSrc": "3948:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3948:37:4"
															},
															"nativeSrc": "3948:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3948:37:4"
														}
													]
												},
												"name": "store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
												"nativeSrc": "3763:229:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3861:6:4",
														"nodeType": "YulTypedName",
														"src": "3861:6:4",
														"type": ""
													}
												],
												"src": "3763:229:4"
											},
											{
												"body": {
													"nativeSrc": "4144:220:4",
													"nodeType": "YulBlock",
													"src": "4144:220:4",
													"statements": [
														{
															"nativeSrc": "4154:74:4",
															"nodeType": "YulAssignment",
															"src": "4154:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4220:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4220:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:4",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4161:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4161:58:4"
																},
																"nativeSrc": "4161:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4161:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4154:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4326:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4326:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																	"nativeSrc": "4237:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4237:88:4"
																},
																"nativeSrc": "4237:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4237:93:4"
															},
															"nativeSrc": "4237:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4237:93:4"
														},
														{
															"nativeSrc": "4339:19:4",
															"nodeType": "YulAssignment",
															"src": "4339:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4350:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4350:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4355:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4355:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4346:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:4"
																},
																"nativeSrc": "4346:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4346:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4339:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3998:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4132:3:4",
														"nodeType": "YulTypedName",
														"src": "4132:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4140:3:4",
														"nodeType": "YulTypedName",
														"src": "4140:3:4",
														"type": ""
													}
												],
												"src": "3998:366:4"
											},
											{
												"body": {
													"nativeSrc": "4541:248:4",
													"nodeType": "YulBlock",
													"src": "4541:248:4",
													"statements": [
														{
															"nativeSrc": "4551:26:4",
															"nodeType": "YulAssignment",
															"src": "4551:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4563:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4563:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4559:3:4"
																},
																"nativeSrc": "4559:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4559:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4551:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4551:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4598:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4609:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4609:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4594:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:4"
																		},
																		"nativeSrc": "4594:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4594:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4617:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4617:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4623:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4613:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4613:3:4"
																		},
																		"nativeSrc": "4613:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4613:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4587:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:4"
																},
																"nativeSrc": "4587:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4587:47:4"
															},
															"nativeSrc": "4587:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4587:47:4"
														},
														{
															"nativeSrc": "4643:139:4",
															"nodeType": "YulAssignment",
															"src": "4643:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4777:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4777:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4651:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4651:124:4"
																},
																"nativeSrc": "4651:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4651:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4643:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4643:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4370:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4521:9:4",
														"nodeType": "YulTypedName",
														"src": "4521:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4536:4:4",
														"nodeType": "YulTypedName",
														"src": "4536:4:4",
														"type": ""
													}
												],
												"src": "4370:419:4"
											},
											{
												"body": {
													"nativeSrc": "4823:152:4",
													"nodeType": "YulBlock",
													"src": "4823:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4840:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4840:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4843:77:4",
																		"nodeType": "YulLiteral",
																		"src": "4843:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4833:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:4"
																},
																"nativeSrc": "4833:88:4",
																"nodeType": "YulFunctionCall",
																"src": "4833:88:4"
															},
															"nativeSrc": "4833:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "4833:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4937:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4937:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4940:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4940:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4930:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:4"
																},
																"nativeSrc": "4930:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4930:15:4"
															},
															"nativeSrc": "4930:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4930:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4961:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4961:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4964:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4964:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4954:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:4"
																},
																"nativeSrc": "4954:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4954:15:4"
															},
															"nativeSrc": "4954:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4954:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4795:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "4795:180:4"
											},
											{
												"body": {
													"nativeSrc": "5024:190:4",
													"nodeType": "YulBlock",
													"src": "5024:190:4",
													"statements": [
														{
															"nativeSrc": "5034:33:4",
															"nodeType": "YulAssignment",
															"src": "5034:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5061:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5061:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5043:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5043:17:4"
																},
																"nativeSrc": "5043:24:4",
																"nodeType": "YulFunctionCall",
																"src": "5043:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5034:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5034:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5157:22:4",
																"nodeType": "YulBlock",
																"src": "5157:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5159:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5159:16:4"
																			},
																			"nativeSrc": "5159:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5159:18:4"
																		},
																		"nativeSrc": "5159:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5159:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5082:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5082:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5089:66:4",
																		"nodeType": "YulLiteral",
																		"src": "5089:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5079:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5079:2:4"
																},
																"nativeSrc": "5079:77:4",
																"nodeType": "YulFunctionCall",
																"src": "5079:77:4"
															},
															"nativeSrc": "5076:103:4",
															"nodeType": "YulIf",
															"src": "5076:103:4"
														},
														{
															"nativeSrc": "5188:20:4",
															"nodeType": "YulAssignment",
															"src": "5188:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5199:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5199:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5206:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5195:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:4"
																},
																"nativeSrc": "5195:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5195:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5188:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5188:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "4981:233:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5010:5:4",
														"nodeType": "YulTypedName",
														"src": "5010:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5020:3:4",
														"nodeType": "YulTypedName",
														"src": "5020:3:4",
														"type": ""
													}
												],
												"src": "4981:233:4"
											},
											{
												"body": {
													"nativeSrc": "5263:128:4",
													"nodeType": "YulBlock",
													"src": "5263:128:4",
													"statements": [
														{
															"nativeSrc": "5273:33:4",
															"nodeType": "YulAssignment",
															"src": "5273:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5300:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5300:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5282:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5282:17:4"
																},
																"nativeSrc": "5282:24:4",
																"nodeType": "YulFunctionCall",
																"src": "5282:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5273:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5273:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5334:22:4",
																"nodeType": "YulBlock",
																"src": "5334:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5336:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5336:16:4"
																			},
																			"nativeSrc": "5336:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5336:18:4"
																		},
																		"nativeSrc": "5336:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5336:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5321:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5321:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5328:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5328:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5318:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5318:2:4"
																},
																"nativeSrc": "5318:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5318:15:4"
															},
															"nativeSrc": "5315:41:4",
															"nodeType": "YulIf",
															"src": "5315:41:4"
														},
														{
															"nativeSrc": "5365:20:4",
															"nodeType": "YulAssignment",
															"src": "5365:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5376:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5376:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5383:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5383:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5372:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:4"
																},
																"nativeSrc": "5372:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5372:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5365:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5365:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "5220:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5249:5:4",
														"nodeType": "YulTypedName",
														"src": "5249:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5259:3:4",
														"nodeType": "YulTypedName",
														"src": "5259:3:4",
														"type": ""
													}
												],
												"src": "5220:171:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter can be updated only when\")\n\n        mstore(add(memPtr, 32), \" activated\")\n\n    }\n\n    function abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009b575f3560e01c8063715018a611610063578063715018a6146101595780638da5cb5b1461016f578063abd1b73d14610199578063e834cbb3146101a3578063f2fde38b146101ad578063ffc959f7146101d55761009b565b806306661abd1461009f5780631236b529146100c95780632048ff11146100f157806324600fc31461011b57806368fcb1c114610131575b5f80fd5b3480156100aa575f80fd5b506100b36101ff565b6040516100c091906105cd565b60405180910390f35b3480156100d4575f80fd5b506100ef60048036038101906100ea9190610614565b610205565b005b3480156100fc575f80fd5b50610105610217565b60405161011291906105cd565b60405180910390f35b348015610126575f80fd5b5061012f61021d565b005b34801561013c575f80fd5b5061015760048036038101906101529190610674565b61027c565b005b348015610164575f80fd5b5061016d6102a0565b005b34801561017a575f80fd5b506101836102b3565b60405161019091906106de565b60405180910390f35b6101a16102da565b005b6101ab610355565b005b3480156101b8575f80fd5b506101d360048036038101906101ce9190610721565b6103d0565b005b3480156101e0575f80fd5b506101e9610454565b6040516101f6919061075b565b60405180910390f35b60015481565b61020d610466565b8060038190555050565b60035481565b610225610466565b5f61022e6102b3565b90505f4790508173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610277573d5f803e3d5ffd5b505050565b610284610466565b8060025f6101000a81548160ff02191690831515021790555050565b6102a8610466565b6102b15f6104ed565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001151560025f9054906101000a900460ff1615151461032f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610326906107f4565b60405180910390fd5b600354341461033c575f80fd5b60015f81548092919061034e9061083f565b9190505550565b6001151560025f9054906101000a900460ff161515146103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a1906107f4565b60405180910390fd5b60035434146103b7575f80fd5b60015f8154809291906103c990610886565b9190505550565b6103d8610466565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610448575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043f91906106de565b60405180910390fd5b610451816104ed565b50565b60025f9054906101000a900460ff1681565b61046e6105ae565b73ffffffffffffffffffffffffffffffffffffffff1661048c6102b3565b73ffffffffffffffffffffffffffffffffffffffff16146104eb576104af6105ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104e291906106de565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6105c7816105b5565b82525050565b5f6020820190506105e05f8301846105be565b92915050565b5f80fd5b6105f3816105b5565b81146105fd575f80fd5b50565b5f8135905061060e816105ea565b92915050565b5f60208284031215610629576106286105e6565b5b5f61063684828501610600565b91505092915050565b5f8115159050919050565b6106538161063f565b811461065d575f80fd5b50565b5f8135905061066e8161064a565b92915050565b5f60208284031215610689576106886105e6565b5b5f61069684828501610660565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c88261069f565b9050919050565b6106d8816106be565b82525050565b5f6020820190506106f15f8301846106cf565b92915050565b610700816106be565b811461070a575f80fd5b50565b5f8135905061071b816106f7565b92915050565b5f60208284031215610736576107356105e6565b5b5f6107438482850161070d565b91505092915050565b6107558161063f565b82525050565b5f60208201905061076e5f83018461074c565b92915050565b5f82825260208201905092915050565b7f436f756e7465722063616e2062652075706461746564206f6e6c79207768656e5f8201527f2061637469766174656400000000000000000000000000000000000000000000602082015250565b5f6107de602a83610774565b91506107e982610784565b604082019050919050565b5f6020820190508181035f83015261080b816107d2565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610849826105b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361087b5761087a610812565b5b600182019050919050565b5f610890826105b5565b91505f82036108a2576108a1610812565b5b60018203905091905056fea2646970667358221220078fc13f97dd34fc6db584f9a1c2b758ec79a6445e3e86f330efb2b47727999f64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xABD1B73D EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xE834CBB3 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xFFC959F7 EQ PUSH2 0x1D5 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x1236B529 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x2048FF11 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x68FCB1C1 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x2A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x466 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH2 0x22E PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP PUSH0 SELFBALANCE SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x466 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x2B1 PUSH0 PUSH2 0x4ED JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x326 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x34E SWAP1 PUSH2 0x83F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3C9 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x466 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x448 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x451 DUP2 PUSH2 0x4ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x46E PUSH2 0x5AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x48C PUSH2 0x2B3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EB JUMPI PUSH2 0x4AF PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C7 DUP2 PUSH2 0x5B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F3 DUP2 PUSH2 0x5B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x60E DUP2 PUSH2 0x5EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x629 JUMPI PUSH2 0x628 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x636 DUP5 DUP3 DUP6 ADD PUSH2 0x600 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x653 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP2 EQ PUSH2 0x65D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66E DUP2 PUSH2 0x64A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x696 DUP5 DUP3 DUP6 ADD PUSH2 0x660 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C8 DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x6CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP2 EQ PUSH2 0x70A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x71B DUP2 PUSH2 0x6F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x736 JUMPI PUSH2 0x735 PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x70D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x63F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x76E PUSH0 DUP4 ADD DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F756E7465722063616E2062652075706461746564206F6E6C79207768656E PUSH0 DUP3 ADD MSTORE PUSH32 0x2061637469766174656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7DE PUSH1 0x2A DUP4 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E9 DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x80B DUP2 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x849 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x812 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x8A2 JUMPI PUSH2 0x8A1 PUSH2 0x812 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD DUP16 0xC1 EXTCODEHASH SWAP8 0xDD CALLVALUE 0xFC PUSH14 0xB584F9A1C2B758EC79A6445E3E86 RETURN ADDRESS 0xEF 0xB2 0xB4 PUSH24 0x27999F64736F6C6343000819003300000000000000000000 ",
							"sourceMap": "239:1556:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;401:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1578:214;;;;;;;;;;;;;:::i;:::-;;1054:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:136:2;;;:::i;:::-;;1381;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;359:35:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:21;;;;:::o;893:102::-;1531:13:0;:11;:13::i;:::-;981:6:2::1;963:15;:24;;;;893:102:::0;:::o;401:40::-;;;;:::o;1578:214::-;1531:13:0;:11;:13::i;:::-;1632:28:2::1;1672:7;:5;:7::i;:::-;1632:48;;1691:20;1714:21;1691:44;;1746:12;:21;;:38;1768:15;1746:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1621:171;;1578:214::o:0;1054:126::-;1531:13:0;:11;:13::i;:::-;1155:17:2::1;1136:16;;:36;;;;;;;;;;;;;;;;;;1054:126:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1237:136:2:-;767:4;747:24;;:16;;;;;;;;;;;:24;;;739:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:15:::1;;1318:9;:28;1310:37;;;::::0;::::1;;1358:5;;:7;;;;;;;;;:::i;:::-;;;;;;1237:136::o:0;1381:::-;767:4;747:24;;:16;;;;;;;;;;;:24;;;739:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1475:15:::1;;1462:9;:28;1454:37;;;::::0;::::1;;1502:5;;:7;;;;;;;;;:::i;:::-;;;;;;1381:136::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;359:35:2:-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:90::-;1411:7;1454:5;1447:13;1440:21;1429:32;;1377:90;;;:::o;1473:116::-;1543:21;1558:5;1543:21;:::i;:::-;1536:5;1533:32;1523:60;;1579:1;1576;1569:12;1523:60;1473:116;:::o;1595:133::-;1638:5;1676:6;1663:20;1654:29;;1692:30;1716:5;1692:30;:::i;:::-;1595:133;;;;:::o;1734:323::-;1790:6;1839:2;1827:9;1818:7;1814:23;1810:32;1807:119;;;1845:79;;:::i;:::-;1807:119;1965:1;1990:50;2032:7;2023:6;2012:9;2008:22;1990:50;:::i;:::-;1980:60;;1936:114;1734:323;;;;:::o;2063:126::-;2100:7;2140:42;2133:5;2129:54;2118:65;;2063:126;;;:::o;2195:96::-;2232:7;2261:24;2279:5;2261:24;:::i;:::-;2250:35;;2195:96;;;:::o;2297:118::-;2384:24;2402:5;2384:24;:::i;:::-;2379:3;2372:37;2297:118;;:::o;2421:222::-;2514:4;2552:2;2541:9;2537:18;2529:26;;2565:71;2633:1;2622:9;2618:17;2609:6;2565:71;:::i;:::-;2421:222;;;;:::o;2649:122::-;2722:24;2740:5;2722:24;:::i;:::-;2715:5;2712:35;2702:63;;2761:1;2758;2751:12;2702:63;2649:122;:::o;2777:139::-;2823:5;2861:6;2848:20;2839:29;;2877:33;2904:5;2877:33;:::i;:::-;2777:139;;;;:::o;2922:329::-;2981:6;3030:2;3018:9;3009:7;3005:23;3001:32;2998:119;;;3036:79;;:::i;:::-;2998:119;3156:1;3181:53;3226:7;3217:6;3206:9;3202:22;3181:53;:::i;:::-;3171:63;;3127:117;2922:329;;;;:::o;3257:109::-;3338:21;3353:5;3338:21;:::i;:::-;3333:3;3326:34;3257:109;;:::o;3372:210::-;3459:4;3497:2;3486:9;3482:18;3474:26;;3510:65;3572:1;3561:9;3557:17;3548:6;3510:65;:::i;:::-;3372:210;;;;:::o;3588:169::-;3672:11;3706:6;3701:3;3694:19;3746:4;3741:3;3737:14;3722:29;;3588:169;;;;:::o;3763:229::-;3903:34;3899:1;3891:6;3887:14;3880:58;3972:12;3967:2;3959:6;3955:15;3948:37;3763:229;:::o;3998:366::-;4140:3;4161:67;4225:2;4220:3;4161:67;:::i;:::-;4154:74;;4237:93;4326:3;4237:93;:::i;:::-;4355:2;4350:3;4346:12;4339:19;;3998:366;;;:::o;4370:419::-;4536:4;4574:2;4563:9;4559:18;4551:26;;4623:9;4617:4;4613:20;4609:1;4598:9;4594:17;4587:47;4651:131;4777:4;4651:131;:::i;:::-;4643:139;;4370:419;;;:::o;4795:180::-;4843:77;4840:1;4833:88;4940:4;4937:1;4930:15;4964:4;4961:1;4954:15;4981:233;5020:3;5043:24;5061:5;5043:24;:::i;:::-;5034:33;;5089:66;5082:5;5079:77;5076:103;;5159:18;;:::i;:::-;5076:103;5206:1;5199:5;5195:13;5188:20;;4981:233;;;:::o;5220:171::-;5259:3;5282:24;5300:5;5282:24;:::i;:::-;5273:33;;5328:4;5321:5;5318:15;5315:41;;5336:18;;:::i;:::-;5315:41;5383:1;5376:5;5372:13;5365:20;;5220:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "455000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"count()": "2426",
								"counterActivated()": "2576",
								"decreaseCount()": "28830",
								"increaseCount()": "28809",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setCounterActivated(bool)": "infinite",
								"setTransactionCost(uint256)": "infinite",
								"transactionCost()": "2470",
								"transferOwnership(address)": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 352,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 352,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 390,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 359,
									"end": 394,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 359,
									"end": 394,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 359,
									"end": 394,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 431,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "2386F26FC10000"
								},
								{
									"begin": 401,
									"end": 441,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 401,
									"end": 441,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 275,
									"end": 285,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 562,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "470DE4DF820000"
								},
								{
									"begin": 549,
									"end": 558,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 549,
									"end": 572,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 549,
									"end": 572,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 541,
									"end": 631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 541,
									"end": 631,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 541,
									"end": 631,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 593,
									"end": 762,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 677,
									"end": 688,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 711,
									"end": 717,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 706,
									"end": 709,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 699,
									"end": 718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 746,
									"end": 749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 742,
									"end": 756,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 727,
									"end": 756,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 727,
									"end": 756,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 593,
									"end": 762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 768,
									"end": 1009,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 768,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 908,
									"end": 942,
									"name": "PUSH",
									"source": 4,
									"value": "4D696E696D756D2076616C756520746F206465706F73697420746F2074686520"
								},
								{
									"begin": 904,
									"end": 905,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 902,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 892,
									"end": 906,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 885,
									"end": 943,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 977,
									"end": 1001,
									"name": "PUSH",
									"source": 4,
									"value": "636F6E747261637420697320302E303220657468657200000000000000000000"
								},
								{
									"begin": 972,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 960,
									"end": 975,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 953,
									"end": 1002,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 768,
									"end": 1009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 768,
									"end": 1009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1381,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1015,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1160,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1242,
									"end": 1244,
									"name": "PUSH",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1237,
									"end": 1240,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1178,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1178,
									"end": 1245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1178,
									"end": 1245,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1178,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1245,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1245,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1254,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1343,
									"end": 1346,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1254,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1254,
									"end": 1347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1254,
									"end": 1347,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1254,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1374,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1363,
									"end": 1375,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1356,
									"end": 1375,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1356,
									"end": 1375,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1381,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1381,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1381,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1015,
									"end": 1381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1806,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1387,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1557,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1594,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1568,
									"end": 1594,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1649,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1634,
									"end": 1638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1650,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1615,
									"end": 1624,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1628,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1604,
									"end": 1651,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1668,
									"end": 1799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1799,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1668,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 1799,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 1799,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1806,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 1795,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220078fc13f97dd34fc6db584f9a1c2b758ec79a6445e3e86f330efb2b47727999f64736f6c63430008190033",
									".code": [
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "ABD1B73D"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "E834CBB3"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "FFC959F7"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "6661ABD"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "1236B529"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "2048FF11"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "24600FC3"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "68FCB1C1"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 1795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 331,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 331,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 893,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 893,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 401,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1578,
											"end": 1792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1054,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1054,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1237,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1381,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 359,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 359,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 331,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 893,
											"end": 995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 963,
											"end": 978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 963,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 963,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 963,
											"end": 987,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 963,
											"end": 987,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 441,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1578,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1672,
											"end": 1677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1672,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1672,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 1680,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1768,
											"end": 1783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1136,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1172,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1237,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 739,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1331,
											"end": 1346,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1327,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1346,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1310,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1358,
											"end": 1365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1381,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 747,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 747,
											"end": 771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 739,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 739,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 739,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1471,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1490,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1454,
											"end": 1491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1502,
											"end": 1507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1502,
											"end": 1509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 359,
											"end": 394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1461,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1589,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1473,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1543,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1564,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1543,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1565,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1523,
											"end": 1583,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1581,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1583,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1523,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1589,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1692,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1692,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1842,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1926,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1807,
											"end": 1926,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1845,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1845,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1926,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1807,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1990,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1990,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 2057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2063,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2182,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2291,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2195,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2261,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2261,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2415,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2297,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2402,
											"end": 2407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2384,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2408,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2384,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2382,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2565,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2565,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2722,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2720,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2747,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2877,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3036,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3181,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3366,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3257,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3353,
											"end": 3358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3338,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3359,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3338,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3333,
											"end": 3336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3360,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3554,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3510,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3575,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3510,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3992,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3763,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3937,
											"name": "PUSH",
											"source": 4,
											"value": "436F756E7465722063616E2062652075706461746564206F6E6C79207768656E"
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "PUSH",
											"source": 4,
											"value": "2061637469766174656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3985,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4364,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3998,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4140,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 4220,
											"end": 4223,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4161,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4228,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4161,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4326,
											"end": 4329,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4237,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4330,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4237,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4357,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4370,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4633,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4651,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4782,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4651,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4643,
											"end": 4782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4643,
											"end": 4782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4795,
											"end": 4975,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4795,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 4920,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4930,
											"end": 4945,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5214,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4981,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5061,
											"end": 5066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5043,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5155,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5082,
											"end": 5087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5076,
											"end": 5179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5159,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5076,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5199,
											"end": 5204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5391,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5220,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5300,
											"end": 5305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5282,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5282,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5315,
											"end": 5356,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5336,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5336,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5356,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5315,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5376,
											"end": 5381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Counter.sol",
								"interfaces/ICounter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"counterActivated()": "ffc959f7",
							"decreaseCount()": "e834cbb3",
							"increaseCount()": "abd1b73d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCounterActivated(bool)": "68fcb1c1",
							"setTransactionCost(uint256)": "1236b529",
							"transactionCost()": "2048ff11",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counterActivated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreaseCount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_counterActivated\",\"type\":\"bool\"}],\"name\":\"setCounterActivated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTransactionCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Counter.sol\":\"CounterContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Counter.sol\":{\"keccak256\":\"0x8c791431bbacb43aa3d84ef6479fe149d3e3358bbc63380448377e7fbc1f0fab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fa4f1dbce919ec4bcc17ac7ec086a89e1d71cef8119c7aa43a70f4507f14397\",\"dweb:/ipfs/QmYvjZt2napcbjtuEj83jDvF54xuSaMh6nBPwoKg6x5kTY\"]},\"interfaces/ICounter.sol\":{\"keccak256\":\"0x20ca4277683b8b9be78bd247c16f9a011ea7b33c7423dc6da5bb2b10fea867f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07038ac509a5a4d0f676ddb66ea138246f2648638f4454a52ed8bf718b160da8\",\"dweb:/ipfs/QmaRdzKMjT1YdDisQyRmHj6RzhxLswLMFv8oqpGcvc7MNs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 190,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "count",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 193,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "counterActivated",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 196,
								"contract": "contracts/Counter.sol:CounterContract",
								"label": "transactionCost",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/ICounter.sol": {
				"ICounter": {
					"abi": [
						{
							"inputs": [],
							"name": "decreaseCount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increaseCount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_counterActivated",
									"type": "bool"
								}
							],
							"name": "setCounterActivated",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setTransactionCost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decreaseCount()": "e834cbb3",
							"increaseCount()": "abd1b73d",
							"setCounterActivated(bool)": "68fcb1c1",
							"setTransactionCost(uint256)": "1236b529"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decreaseCount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_counterActivated\",\"type\":\"bool\"}],\"name\":\"setCounterActivated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTransactionCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ICounter.sol\":\"ICounter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ICounter.sol\":{\"keccak256\":\"0x20ca4277683b8b9be78bd247c16f9a011ea7b33c7423dc6da5bb2b10fea867f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07038ac509a5a4d0f676ddb66ea138246f2648638f4454a52ed8bf718b160da8\",\"dweb:/ipfs/QmaRdzKMjT1YdDisQyRmHj6RzhxLswLMFv8oqpGcvc7MNs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/Counter.sol": {
				"ast": {
					"absolutePath": "contracts/Counter.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"CounterContract": [
							304
						],
						"ICounter": [
							323
						],
						"Ownable": [
							147
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 305,
							"sourceUnit": 148,
							"src": "119:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ICounter.sol",
							"file": "interfaces/ICounter.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 305,
							"sourceUnit": 324,
							"src": "202:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 183,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "275:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 184,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "279:6:2",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "275:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"267:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "267:7:2"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "267:19:2"
								},
								{
									"baseName": {
										"id": 186,
										"name": "ICounter",
										"nameLocations": [
											"288:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "288:8:2"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "288:8:2"
								}
							],
							"canonicalName": "CounterContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304,
								323,
								147,
								177
							],
							"name": "CounterContract",
							"nameLocation": "248:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 190,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "343:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "331:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 188,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "331:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "351:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ffc959f7",
									"id": 193,
									"mutability": "mutable",
									"name": "counterActivated",
									"nameLocation": "371:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "359:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 191,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "359:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "390:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2048ff11",
									"id": 196,
									"mutability": "mutable",
									"name": "transactionCost",
									"nameLocation": "413:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 304,
									"src": "401:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "401:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "431:10:2",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "530:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 200,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "549:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "553:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "549:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "302e3032",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "562:10:2",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000000000000000_by_1",
																	"typeString": "int_const 20000000000000000"
																},
																"value": "0.02"
															},
															"src": "549:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d2076616c756520746f206465706f73697420746f2074686520636f6e747261637420697320302e3032206574686572",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "574:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05",
																"typeString": "literal_string \"Minimum value to deposit to the contract is 0.02 ether\""
															},
															"value": "Minimum value to deposit to the contract is 0.02 ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afbe5430cbce9945f9045b026c5358395197c3cbc5e3eb40f46316acefbb8b05",
																"typeString": "literal_string \"Minimum value to deposit to the contract is 0.02 ether\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "541:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "541:90:2"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "519:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:0:2"
									},
									"scope": 304,
									"src": "508:131:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "728:110:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "counterActivated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "747:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "767:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "747:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465722063616e2062652075706461746564206f6e6c79207768656e20616374697661746564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "773:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																"typeString": "literal_string \"Counter can be updated only when activated\""
															},
															"value": "Counter can be updated only when activated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5398973f0fa5809c591bd9b8f515931bf4477655d19e2ef5d5ce8a13e51ac4fa",
																"typeString": "literal_string \"Counter can be updated only when activated\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "739:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "739:79:2"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "829:1:2"
											}
										]
									},
									"id": 219,
									"name": "onlyCounterActivated",
									"nameLocation": "708:20:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:0:2"
									},
									"src": "699:139:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										311
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "952:43:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "transactionCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "963:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "981:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "963:24:2"
											}
										]
									},
									"functionSelector": "1236b529",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 223,
												"name": "onlyOwner",
												"nameLocations": [
													"943:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "943:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "943:9:2"
										}
									],
									"name": "setTransactionCost",
									"nameLocation": "902:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "926:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "921:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:13:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:2"
									},
									"scope": 304,
									"src": "893:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										316
									],
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1125:55:2",
										"statements": [
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 238,
														"name": "counterActivated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1136:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 239,
														"name": "_counterActivated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1155:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1136:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1136:36:2"
											}
										]
									},
									"functionSelector": "68fcb1c1",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 235,
												"name": "onlyOwner",
												"nameLocations": [
													"1116:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1116:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1116:9:2"
										}
									],
									"name": "setCounterActivated",
									"nameLocation": "1063:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_counterActivated",
												"nameLocation": "1088:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1083:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:24:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:2"
									},
									"scope": 304,
									"src": "1054:126:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1299:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 249,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1318:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1322:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1318:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 251,
																"name": "transactionCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1331:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1318:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1310:37:2"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1358:7:2",
													"subExpression": {
														"id": 255,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1358:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1358:7:2"
											}
										]
									},
									"functionSelector": "abd1b73d",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 245,
												"name": "onlyCounterActivated",
												"nameLocations": [
													"1279:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 219,
												"src": "1279:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1279:20:2"
										}
									],
									"name": "increaseCount",
									"nameLocation": "1246:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:2:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:0:2"
									},
									"scope": 304,
									"src": "1237:136:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										322
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1443:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1462:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1466:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1462:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 267,
																"name": "transactionCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1475:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1462:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "1454:37:2"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "1502:7:2",
													"subExpression": {
														"id": 271,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1502:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1502:7:2"
											}
										]
									},
									"functionSelector": "e834cbb3",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 261,
												"name": "onlyCounterActivated",
												"nameLocations": [
													"1423:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 219,
												"src": "1423:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1423:20:2"
										}
									],
									"name": "decreaseCount",
									"nameLocation": "1390:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1443:0:2"
									},
									"scope": 304,
									"src": "1381:136:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1621:171:2",
										"statements": [
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "currentOwner",
														"nameLocation": "1648:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "1632:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 280,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1632:15:2",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 284,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1672:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1672:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1663:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 282,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1663:9:2",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1663:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1632:48:2"
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "1696:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 302,
														"src": "1691:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 288,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1691:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 292,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1722:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CounterContract_$304",
																	"typeString": "contract CounterContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CounterContract_$304",
																	"typeString": "contract CounterContract"
																}
															],
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1714:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1714:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1728:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1714:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1691:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "1768:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 296,
															"name": "currentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1746:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1746:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1746:38:2"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "onlyOwner",
												"nameLocations": [
													"1612:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1612:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1612:9:2"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "1587:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:2:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:2"
									},
									"scope": 304,
									"src": "1578:214:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "239:1556:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:1762:2"
				},
				"id": 2
			},
			"interfaces/ICounter.sol": {
				"ast": {
					"absolutePath": "interfaces/ICounter.sol",
					"exportedSymbols": {
						"ICounter": [
							323
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICounter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "ICounter",
							"nameLocation": "71:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1236b529",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTransactionCost",
									"nameLocation": "95:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "119:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "114:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "114:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "113:13:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:0:3"
									},
									"scope": 323,
									"src": "86:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "68fcb1c1",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCounterActivated",
									"nameLocation": "152:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_counterActivated",
												"nameLocation": "177:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "172:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "172:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:24:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:0:3"
									},
									"scope": 323,
									"src": "143:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "abd1b73d",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseCount",
									"nameLocation": "220:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:0:3"
									},
									"scope": 323,
									"src": "211:43:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e834cbb3",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseCount",
									"nameLocation": "269:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:0:3"
									},
									"scope": 323,
									"src": "260:43:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 324,
							"src": "61:245:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:273:3"
				},
				"id": 3
			}
		}
	}
}